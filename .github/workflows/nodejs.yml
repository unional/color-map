name: nodejs
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: setup yarn-cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: cache yarn global cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
      - run: yarn lint
      - run: yarn build
      - run: yarn dependency-check
      - name: upload cjs folder
        uses: actions/upload-artifact@v1
        with:
          name: cjs
          path: cjs
      - name: upload esm folder
        uses: actions/upload-artifact@v1
        with:
          name: esm
          path: esm
  test-nodejs:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [12, 14, 16]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: setup yarn-cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: cache yarn global cache
        if: runner.os != 'macos-latest'
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
      - run: yarn coverage --maxWorkers=2
      - name: codecov
        if: matrix.node-version == 16
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: codacy
        if: github.repository == 'unional/tersify' && matrix.node-version == 16
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/clover.xml
  test-platform:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: ['macos-latest', 'windows-latest']
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: setup yarn-cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: cache yarn global cache
        if: runner.os != 'macos-latest'
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
      - run: yarn coverage --maxWorkers=2
  release:
    name: release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - test-nodejs
      - test-platform
    steps:
      - uses: actions/checkout@v2
      - name: setup yarn-cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: cache yarn global cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: download cjs folder
        uses: actions/download-artifact@v2
        with:
          name: cjs
      - name: download esm folder
        uses: actions/download-artifact@v2
        with:
          name: esm
      - name: cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
