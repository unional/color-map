"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createColorsFromMap = createColorsFromMap;

var _createColors = require("./createColors");

/**
 * Create colors with specified color map.
 */
function createColorsFromMap(colormap, shades, alpha) {
  if (shades < colormap.length) {
    throw new Error(`Requires at least ${colormap.length} shades.`);
  }

  const result = [];
  const steps = [];

  for (let i = 0; i < colormap.length; i++) {
    steps.push(Math.round(colormap[i].index * shades));
  }

  for (let i = 0; i < colormap.length - 1; i++) {
    const n = steps[i + 1] - steps[i];
    const from = colormap[i].rgb;
    const to = colormap[i + 1].rgb;
    result.push(...(0, _createColors.createColors)(from, to, n, alpha));
  }

  return result;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3RzL2NyZWF0ZUNvbG9yc0Zyb21NYXAudHMiXSwibmFtZXMiOlsiY3JlYXRlQ29sb3JzRnJvbU1hcCIsImNvbG9ybWFwIiwic2hhZGVzIiwiYWxwaGEiLCJsZW5ndGgiLCJFcnJvciIsInJlc3VsdCIsInN0ZXBzIiwiaSIsInB1c2giLCJNYXRoIiwicm91bmQiLCJpbmRleCIsIm4iLCJmcm9tIiwicmdiIiwidG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQSxtQkFBVCxDQUE2QkMsUUFBN0IsRUFBaURDLE1BQWpELEVBQWlFQyxLQUFqRSxFQUF3RjtBQUM3RixNQUFJRCxNQUFNLEdBQUdELFFBQVEsQ0FBQ0csTUFBdEIsRUFBOEI7QUFDNUIsVUFBTSxJQUFJQyxLQUFKLENBQVcscUJBQW9CSixRQUFRLENBQUNHLE1BQU8sVUFBL0MsQ0FBTjtBQUNEOztBQUVELFFBQU1FLE1BQWMsR0FBRyxFQUF2QjtBQUNBLFFBQU1DLEtBQWUsR0FBRyxFQUF4Qjs7QUFDQSxPQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdQLFFBQVEsQ0FBQ0csTUFBN0IsRUFBcUNJLENBQUMsRUFBdEMsRUFBMEM7QUFDeENELElBQUFBLEtBQUssQ0FBQ0UsSUFBTixDQUFXQyxJQUFJLENBQUNDLEtBQUwsQ0FBV1YsUUFBUSxDQUFDTyxDQUFELENBQVIsQ0FBWUksS0FBWixHQUFvQlYsTUFBL0IsQ0FBWDtBQUNEOztBQUVELE9BQUssSUFBSU0sQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR1AsUUFBUSxDQUFDRyxNQUFULEdBQWtCLENBQXRDLEVBQXlDSSxDQUFDLEVBQTFDLEVBQThDO0FBQzVDLFVBQU1LLENBQUMsR0FBR04sS0FBSyxDQUFDQyxDQUFDLEdBQUcsQ0FBTCxDQUFMLEdBQWVELEtBQUssQ0FBQ0MsQ0FBRCxDQUE5QjtBQUNBLFVBQU1NLElBQUksR0FBR2IsUUFBUSxDQUFDTyxDQUFELENBQVIsQ0FBWU8sR0FBekI7QUFDQSxVQUFNQyxFQUFFLEdBQUdmLFFBQVEsQ0FBQ08sQ0FBQyxHQUFHLENBQUwsQ0FBUixDQUFnQk8sR0FBM0I7QUFDQVQsSUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVksR0FBRyxnQ0FBYUssSUFBYixFQUFtQkUsRUFBbkIsRUFBdUJILENBQXZCLEVBQTBCVixLQUExQixDQUFmO0FBQ0Q7O0FBRUQsU0FBT0csTUFBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ29sb3JzIH0gZnJvbSAnLi9jcmVhdGVDb2xvcnMnXG5pbXBvcnQgeyBDb2xvck1hcCwgQWxwaGEsIFJHQkEgfSBmcm9tICcuL2ludGVyZmFjZXMnXG5cbi8qKlxuICogQ3JlYXRlIGNvbG9ycyB3aXRoIHNwZWNpZmllZCBjb2xvciBtYXAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb2xvcnNGcm9tTWFwKGNvbG9ybWFwOiBDb2xvck1hcCwgc2hhZGVzOiBudW1iZXIsIGFscGhhPzogQWxwaGEpOiBSR0JBW10ge1xuICBpZiAoc2hhZGVzIDwgY29sb3JtYXAubGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBSZXF1aXJlcyBhdCBsZWFzdCAke2NvbG9ybWFwLmxlbmd0aH0gc2hhZGVzLmApXG4gIH1cblxuICBjb25zdCByZXN1bHQ6IFJHQkFbXSA9IFtdXG4gIGNvbnN0IHN0ZXBzOiBudW1iZXJbXSA9IFtdXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgY29sb3JtYXAubGVuZ3RoOyBpKyspIHtcbiAgICBzdGVwcy5wdXNoKE1hdGgucm91bmQoY29sb3JtYXBbaV0uaW5kZXggKiBzaGFkZXMpKVxuICB9XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb2xvcm1hcC5sZW5ndGggLSAxOyBpKyspIHtcbiAgICBjb25zdCBuID0gc3RlcHNbaSArIDFdIC0gc3RlcHNbaV1cbiAgICBjb25zdCBmcm9tID0gY29sb3JtYXBbaV0ucmdiO1xuICAgIGNvbnN0IHRvID0gY29sb3JtYXBbaSArIDFdLnJnYjtcbiAgICByZXN1bHQucHVzaCguLi5jcmVhdGVDb2xvcnMoZnJvbSwgdG8sIG4sIGFscGhhKSlcbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cbiJdfQ==